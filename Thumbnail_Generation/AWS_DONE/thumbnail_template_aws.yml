# Note: Service Template for deploying Thumbnail Generation Application
- hosts: localhost
  vars:
    - current_directory: "{{ lookup('env','PWD') }}"
    - bucket_name1: input-bucket-for-thumbnail-generation-app
    - bucket_name2: output-bucket-for-thumbnail-generation-app
    - region: eu-central-1
    - function_name: image-resizer
    - lambda_concurrency: null
  tasks:
    # Note: Setup & configuration of AWS Plattform
    - name: Install python module boto
      pip:
        name: boto
        state: latest

    - name: Install python module boto3
      pip:
        name: boto3
        state: latest

    - name: Install python module botocore
      pip:
        name: botocore
        state: latest

    - name: Install python module awscli
      pip:
        name: awscli
        state: latest

    # Note: Setup & configuration of AWS Role
    - name: Create a role with description and tags
      iam_role:
        name: mynewrole
        state: present
        assume_role_policy_document: "{{ lookup('file','policy.json') }}"
        managed_policy:
          -  arn:aws:iam::aws:policy/AWSLambdaFullAccess
      register: iam_role_response

    # Note: Setup & configuration of AWS Lambda function
    - name: Create AWS Lambda function - "{{ function_name }}"
      lambda:
        name: "{{ function_name }}"
        zip_file: "{{ lookup('fileglob','X-test-ImageRes.zip') }}"
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: "{{ iam_role_response.arn }}"
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: "Put concurrency of Lambda function on AWS : {{ function_name }}"
      command: >-
        aws lambda put-function-concurrency
          --function-name {{ function_name }}
          --reserved-concurrent-executions {{ lambda_concurrency }}
          --region {{ aws_region }}
      when: lambda_concurrency | d(False)

    - name: Create function alias name - "{{ function_name }}"
      lambda_alias:
        function_name: "{{ function_name }}"
        name: "{{ function_name }}-v0_1"
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: Add invocation permission of Lambda function on AWS - "{{ function_name }}"
      lambda_policy:
        function_name: "{{ function_name }}"
        statement_id: "lambda-myFunction-{{ function_name }}"
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: "{{ function_name }}-v0_1"
        principal: "s3.amazonaws.com"

    # Note: Setup & configuration of AWS S3 Buckets
    - name: Create S3 bucket "{{ bucket_name1 }}"
      aws_s3:
        bucket: "{{ bucket_name1 }}"
        mode: create
        region: "{{ region }}"

    - name: Create S3 bucket "{{ bucket_name2 }}"
      aws_s3:
        bucket: "{{ bucket_name2 }}"
        mode: create
        region: "{{ region }}"
