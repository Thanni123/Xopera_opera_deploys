- hosts: localhost
  vars:
    - current_directory: "{{ lookup('env', 'PWD') }}"
#Remove additional path when using xopera opera orchestrator for deployment
    - addtional_path_parameter: '/Desktop/ToDo_deploy/'
    - region: eu-central-1
  tasks:
#Searching for .zip(function)/.json(policy) file
    - name: Find .zip file by name
      find:
#>>REDEFINE THIS PATH LATER ON<<
        paths: "{{ current_directory + addtional_path_parameter }}"
#>>REDEFINE THIS PATH LATER ON<<
        patterns: 'X-test-ImageRes.zip'
        recurse: yes
      register: zip_file_matched_subdirectory

    - name: Find policy.json by name
      find:
#>>REDEFINE THIS PATH LATER ON<<
        paths: "{{ current_directory + addtional_path_parameter }}"
#>>REDEFINE THIS PATH LATER ON<<
        patterns: 'policy.json'
        recurse: yes
      register: policy_file_matched_subdirectory

#Create aws role for rights ...
    - name: Create Lambda AWS role
      iam_role:
        name: Lambda-role
        state: present
        assume_role_policy_document: "{{ lookup('file', lookup('fileglob', policy_file_matched_subdirectory.files[0].path)) }}"
        managed_policy:
          -  arn:aws:iam::aws:policy/AWSLambdaFullAccess
          -  arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess
      register: iam_role_response

#-------------------------------
#Deploy and create 'create' function
    - name: Lambda create function deploy
      lambda:
        name: 'create'
#>>REPLACE THIS ZIP FILE LATER ON<<
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
#>>REPLACE THIS ZIP FILE LATER ON<<
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'create'
        name: 'create-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS"
      lambda_policy:
        function_name: 'create'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'create-v0_1'
        principal: "s3.amazonaws.com"

#-------------------------------
#Deploy and create 'update' function
    - name: Lambda update function deploy
      lambda:
        name: 'update'
#>>REPLACE THIS ZIP FILE LATER ON<<
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
#>>REPLACE THIS ZIP FILE LATER ON<<
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'update'
        name: 'update-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS"
      lambda_policy:
        function_name: 'update'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'update-v0_1'
        principal: "s3.amazonaws.com"

#-------------------------------
#Deploy and create 'delete' function
    - name: Lambda delete function deploy
      lambda:
        name: 'delete'
#>>REPLACE THIS ZIP FILE LATER ON<<
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
#>>REPLACE THIS ZIP FILE LATER ON<<
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'delete'
        name: 'delete-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS"
      lambda_policy:
        function_name: 'delete'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'delete-v0_1'
        principal: "s3.amazonaws.com"

#-------------------------------
#Deploy and create 'list' function
    - name: Lambda list function deploy
      lambda:
        name: 'list'
#>>REPLACE THIS ZIP FILE LATER ON<<
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
#>>REPLACE THIS ZIP FILE LATER ON<<
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'list'
        name: 'list-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS"
      lambda_policy:
        function_name: 'list'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'list-v0_1'
        principal: "s3.amazonaws.com"

#-------------------------------
#Deploy and create 'list-all' function
    - name: Lambda list-all function deploy
      lambda:
        name: 'list-all'
#>>REPLACE THIS ZIP FILE LATER ON<<
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
#>>REPLACE THIS ZIP FILE LATER ON<<
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'list-all'
        name: 'list-all-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS"
      lambda_policy:
        function_name: 'list-all'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'list-all-v0_1'
        principal: "s3.amazonaws.com"

    - name: Set attributes
      set_stats:
        data: 
          arn: "{{alias_info.alias_arn}}"
          region: 'us-east-1'

#Deploy and create api gateway for communication
    - name: Find swagger.yaml by name
      find:
#>>REDEFINE THIS PATH LATER ON<<
        paths: "{{ current_directory + addtional_path_parameter }}"
#>>REDEFINE THIS PATH LATER ON<<
        patterns: 'RadonApiGateway.yaml'
        recurse: yes
      register: swagger_file_matched_subdirectory

    - name: Configure gateway API swagger file
      template:
        # src: 'swagger_file_matched_subdirectory.files[0].path'
#Use this line when using xopera opera orchestrator
        # dest: "current_directory + /RadonApiGatewayNew.yaml"
        src: "/home/phong/Desktop/ToDo_deploy/RadonApiGateway.yaml"
        dest: "/home/phong/Desktop/ToDo_deploy/RadonApiGatewayNew.yaml"
        mode: u=rw,g=r,o=r
      
    - name: Deploy API gateway
      aws_api_gateway:
        state: present
#Use this line when using xopera opera orchestrator
        # swagger_file : "current_directory + /RadonApiGatewayNew.yaml"
        swagger_file: "/home/phong/Desktop/ToDo_deploy/RadonApiGatewayNew.yaml"
        stage: production
        region: 'us-east-1'