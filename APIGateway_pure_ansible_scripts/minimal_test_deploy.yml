- hosts: localhost
  vars:
    - current_directory: "{{ lookup('env', 'PWD') }}"
    - additional_params: "/Desktop"
    - region: eu-central-1
  tasks:
    - name: Debug current directory
      debug:
        msg: "Current path: {{ current_directory + additional_params }}"

#Searching for .zip(function)/.json(policy) file
    - name: Find .zip file by name
      find:
        paths: "{{ current_directory + additional_params }}"
        patterns: 'X-test-ImageRes.zip'
        recurse: yes
      register: zip_file_matched_subdirectory

    - name: Find policy.json by name
      find:
        paths: "{{ current_directory + additional_params }}"
        patterns: 'policy.json'
        recurse: yes
      register: policy_file_matched_subdirectory

#Create aws role for rights ...
    - name: Create Lambda AWS role
      iam_role:
        name: Lambda-role
        state: present
        assume_role_policy_document: "{{ lookup('file', lookup('fileglob', policy_file_matched_subdirectory.files[0].path)) }}"
        managed_policy:
          -  arn:aws:iam::aws:policy/AWSLambdaFullAccess
          -  arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess
      register: iam_role_response

#Deploy and create aws lambda function
    - name: Lambda resize function deploy
      lambda:
        name: 'resize'
        zip_file: "{{ lookup('fileglob', zip_file_matched_subdirectory.files[0].path) }}"
        runtime: 'nodejs12.x'
        region: "{{ region }}"
        role: 'arn:aws:iam::557233580830:role/phong'
        handler: 'index.handler'
        timeout: 3
        memory_size: 512
        environment_variables: null
      register: lambda_info

    - name: Create function alias name
      lambda_alias:
        function_name: 'resize'
        name: 'resize-v0_1'
        region: "{{ region }}"
        state: present
      register: alias_info

    - name: "Add invocation permission of Lambda function on AWS : {{ permission_id }}"
      lambda_policy:
        function_name: 'resize'
        statement_id: 'lambda-c776234f-0579-4b34-a01d-49fdb4fcb5b4'
        action: lambda:InvokeFunction
        region: "{{ region }}"
        alias: 'resize-v0_1'
        principal: "s3.amazonaws.com"

    - name: Set attributes
      set_stats:
        data: 
          arn: "{{alias_info.alias_arn}}"
          region: 'us-east-1'

#Deploy and create api gateway for communication
    - name: Configure gateway API swagger file
      template:
        src: "/home/phong/Desktop/swagger.yaml"
        dest: "/home/phong/Desktop/swaggerNew.yaml"
        mode: u=rw,g=r,o=r
      vars:
        api_gateway_resource_uri_override: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:557233580830:function:resize"

    - name: Deploy API gateway
      aws_api_gateway:
        state: present
        swagger_file: "/home/phong/Desktop/swaggerNew.yaml"
        stage: production
        region: 'us-east-1'